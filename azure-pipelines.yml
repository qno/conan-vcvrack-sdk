# https://docs.microsoft.com/de-de/azure/devops/pipelines/agents/hosted?view=azure-devops#software
trigger:
- master

variables:
  python-version: "3.7"
  conan-pkg: "conan"
  cpt-pkg:  "conan_package_tools"
  bpt-pkg: "bincrafters_package_tools"

jobs:
  - job: Linux
    pool:
      vmImage: Ubuntu-16.04
    strategy:
      matrix:
        Gcc 8 x86_64:
          CONAN_GCC_VERSIONS: 8
          CONAN_DOCKER_IMAGE: conanio/gcc8
          CONAN_ARCHS: "x86_64"
        Clang 7.0 x86_64:
          CONAN_CLANG_VERSIONS: 7.0
          CONAN_DOCKER_IMAGE: conanio/clang7
          CONAN_ARCHS: "x86_64"
    steps:
      - task: UsePythonVersion@0
        inputs:
         versionSpec: $(python-version)
      - script: |
          export PATH="$PATH:/home/vsts/.local/bin"
          sudo apt install -y python3-setuptools
          pip install --user --upgrade pip
          pip install --user $(conan-pkg)
          conan user
          conan create .
        displayName: conan create package
  - job: macOS1014
    pool:
      vmImage: macOS-10.14
    strategy:
      matrix:
        # Xcode Version overview: https://gist.github.com/yamaya/2924292
        # available versions: https://github.com/Microsoft/azure-pipelines-image-generation/blob/master/images/macos/macos-10.14-Readme.md
        Apple Clang 10.0.1:
          CONAN_APPLE_CLANG_VERSIONS: 10.0
          XCODE_VERSION: 10.2
    steps:
      - task: UsePythonVersion@0
        inputs:
         versionSpec: $(python-version)
      - script: |
          /bin/bash -c "sudo xcode-select -s /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer"
          export PATH=$PATH:$HOME/.local/bin
          pip install --upgrade pip
          brew update || brew update
          #brew install autoconf automake libtool pkg-config
          #brew install cmake || true
          pip install --upgrade $(conan-pkg)
          #pip install $(cpt-pkg) $(bpt-pkg)
          conan user
          conan create .
        displayName: conan create package
  - job: MinGW
    pool:
      vmImage: vs2017-win2016
    strategy:
      matrix:
        GCC 8:
          MINGW_CONFIGURATIONS: '8@x86_64@seh@posix'
          CONAN_BUILD_TYPES: Release
    steps:
      - task: UsePythonVersion@0
        inputs:
         versionSpec: $(python-version)
      - script: |
          python -m pip install --upgrade pip
          python -m pip install $(conan-pkg)
          conan user
          conan create .
        displayName: conan create package
